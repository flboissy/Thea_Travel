<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddrButton" xml:space="preserve">
    <value>Endereços úteis</value>
    <comment>texte du bouton adresses utiles</comment>
  </data>
  <data name="CoButton" xml:space="preserve">
    <value>Logar</value>
    <comment>texte du bouton de connexion</comment>
  </data>
  <data name="DecoButton" xml:space="preserve">
    <value>Sair</value>
    <comment>texte du bouton de deconnexion</comment>
  </data>
  <data name="FdrButton" xml:space="preserve">
    <value>roteiros</value>
    <comment>texte du bouton feuille de route</comment>
  </data>
  <data name="FromLabel" xml:space="preserve">
    <value>De:</value>
    <comment>Label date début feuille de route</comment>
  </data>
  <data name="IdIncoButton" xml:space="preserve">
    <value>Re-tente</value>
    <comment>Bouton d'alerte identifiant incorrect</comment>
  </data>
  <data name="IdIncoOffButton" xml:space="preserve">
    <value>Re-tente</value>
    <comment>Bouton d'alerte identifiant incorrect hors-ligne</comment>
  </data>
  <data name="IdIncoOffText" xml:space="preserve">
    <value>De modo a poder utilisar el modo desligado, usar os mesmos identificadores como durante sua última sincronização.</value>
    <comment>Texte d'alerte identifiant incorrect hors-ligne</comment>
  </data>
  <data name="IdIncoOffTitle" xml:space="preserve">
    <value>Erro de identificação</value>
    <comment>Titre d'alerte identifiant incorrect hors-ligne</comment>
  </data>
  <data name="IdIncoText" xml:space="preserve">
    <value>Senha ou nome de usuário incorreto</value>
    <comment>Texte d'alerte identifiant incorrect</comment>
  </data>
  <data name="IdIncoTitle" xml:space="preserve">
    <value>Erro de identificação</value>
    <comment>Titre d'alerte identifiant incorrect</comment>
  </data>
  <data name="InfoButton" xml:space="preserve">
    <value>Informações</value>
    <comment>texte du bouton information</comment>
  </data>
  <data name="NoCoFirstButton" xml:space="preserve">
    <value>Modo desligado</value>
    <comment>Premier bouton d'alerte pas de co</comment>
  </data>
  <data name="NoCoSecondButton" xml:space="preserve">
    <value>Re-tente</value>
    <comment>Second bouton d'alerte pas de co</comment>
  </data>
  <data name="NoCoText" xml:space="preserve">
    <value>Verifique sua conexão e re-tetnter qualquer um continue em modo desligado</value>
    <comment>Texte d'alerte pas de co</comment>
  </data>
  <data name="NoCoTitle" xml:space="preserve">
    <value>Problema de conexão</value>
    <comment>Titre d'alerte pas de co</comment>
  </data>
  <data name="NomHotelLabel" xml:space="preserve">
    <value>Nome:</value>
    <comment>Label du nom de l'hotel</comment>
  </data>
  <data name="NoSyncButton" xml:space="preserve">
    <value>Voltar</value>
    <comment>Bouton d'alerte pas de synchro</comment>
  </data>
  <data name="NoSyncText" xml:space="preserve">
    <value>Aucune donnée synchronisée, veuillez vous connectez à internet et vous authentifiez afin de récupérer les données depuis le serveur. Vous pourrez ensuite utiliser le mode hors-ligne.</value>
    <comment>Texte d'alerte pas de synchro</comment>
  </data>
  <data name="NoSyncTitle" xml:space="preserve">
    <value>Erreur</value>
    <comment>Titre d'alerte pas de synchro</comment>
  </data>
  <data name="PwdPlaceHolder" xml:space="preserve">
    <value>Mot de passe</value>
    <comment>PlaceHolder du mot de passe</comment>
  </data>
  <data name="ReqTimeOutButton" xml:space="preserve">
    <value>Ok</value>
    <comment>Bouton d'alerte connexion lente</comment>
  </data>
  <data name="ReqTimeOutText" xml:space="preserve">
    <value>Votre connexion est trop lente</value>
    <comment>Texte d'alerte connexion lente</comment>
  </data>
  <data name="ReqTimeOutTitle" xml:space="preserve">
    <value>Problème de connexion</value>
    <comment>Titre d'alerte connexion lente</comment>
  </data>
  <data name="SwitchText" xml:space="preserve">
    <value>Rester connecté</value>
    <comment>Texte du switch retenir information</comment>
  </data>
  <data name="TelHotelLabel" xml:space="preserve">
    <value>Tél:</value>
    <comment>Label du numero de l'hotel</comment>
  </data>
  <data name="ToLabel" xml:space="preserve">
    <value>Au:</value>
    <comment>Label date fin feuille de route</comment>
  </data>
  <data name="UsrPlaceHolder" xml:space="preserve">
    <value>Nom d'utilisateur</value>
    <comment>PlaceHolder du nom d'utilisateur</comment>
  </data>
</root>